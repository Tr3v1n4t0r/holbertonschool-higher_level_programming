The ``1-my_list`` module
--------------------------

Using ``print_sorted``
______________________

This is a text file in reStructured Text format. First import ``print_sorted`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

How to use:

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

    >>> a_list = MyList('a')
    >>> a_list.print_sorted()
    ['a']

    >>> str_list = MyList('str')
    >>> str_list.print_sorted()
    ['r', 's', 't']

    >>> my_list.append(8)
    >>> my_list.append(4)
    >>> my_list.append(7)
    >>> my_list.append(1)
    >>> my_list.append(3)
    >>> my_list.print_sorted()
    [1, 3, 4, 7, 8]

    >>> print(my_list)
    [8, 4, 7, 1, 3]

    >>> my_list.print_sorted() == my_list
    [1, 3, 4, 7, 8]
    False

    >>> zero_list = MyList()
    >>> zero_list.append(0)
    >>> zero_list.append(0)
    >>> zero_list.append(0)
    >>> zero_list.append(0)
    >>> zero_list.append(0)
    >>> zero_list.print_sorted()
    [0, 0, 0, 0, 0]

    >>> float_list = MyList(5.2)
    Traceback (most recent call last):
        ...
    TypeError: 'float' object is not iterable

    >>> inf_list = MyList(float('inf'))
    Traceback (most recent call last):
        ...
    TypeError: 'float' object is not iterable

    >>> nan_list = MyList(float('nan'))
    Traceback (most recent call last):
        ...
    TypeError: 'float' object is not iterable

    >>> my_list.append('a')
    >>> my_list.print_sorted()
    Traceback (most recent call last):
        ...
    TypeError: unorderable types: str() < int()
